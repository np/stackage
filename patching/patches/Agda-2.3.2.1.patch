diff -ru orig/Agda.cabal new/Agda.cabal
--- orig/Agda.cabal	2013-10-31 23:19:44.000734677 +0100
+++ new/Agda.cabal	2013-10-31 23:19:43.000000000 +0100
@@ -71,7 +71,7 @@
                     -- mtl-2.1 contains a severe bug
                     mtl >= 2.0 && < 2.1 || >= 2.1.1 && < 2.2,
                     QuickCheck >= 2.3 && < 2.7,
-                    haskell-src-exts >= 1.9.6 && < 1.14,
+                    haskell-src-exts >= 1.9.6 && < 1.15,
                     containers >= 0.1 && < 0.6,
                     unordered-containers == 0.2.*,
                     pretty >= 1.0 && < 1.2,
@@ -83,8 +83,11 @@
                     process >= 1.0.1.0 && < 1.2,
                     haskeline >= 0.6.3.2 && < 0.8,
                     xhtml == 3000.2.*,
-                    hashable >= 1.1.2.3 && < 1.3,
-                    hashtables == 1.0.*,
+                    -- hashable 1.2.0.10 makes library-test 10x
+                    -- slower. The issue was fixed in hashable 1.2.1.0.
+                    -- https://github.com/tibbe/hashable/issues/57.
+                    hashable >= 1.1.2.3 && < 1.2 || >= 1.2.1.0 && < 1.3,
+                    hashtables >= 1.0 && < 1.2,
                     geniplate >= 0.6.0.3 && < 0.7,
                     parallel < 3.3,
                     deepseq == 1.3.*,
Only in orig: dist
diff -ru orig/src/full/Agda/Compiler/MAlonzo/Compiler.hs new/src/full/Agda/Compiler/MAlonzo/Compiler.hs
--- orig/src/full/Agda/Compiler/MAlonzo/Compiler.hs	2013-10-31 23:19:43.920734485 +0100
+++ new/src/full/Agda/Compiler/MAlonzo/Compiler.hs	2013-10-31 23:19:43.000000000 +0100
@@ -228,7 +228,7 @@
         (a, _) <- conArityAndPars c
         Just (HsDefn _ hsc) <- compiledHaskell . defCompiledRep <$> getConstInfo c
         let pat = HS.PApp (HS.UnQual $ HS.Ident hsc) $ genericReplicate a HS.PWildCard
-        return $ HS.Alt dummy pat (HS.UnGuardedAlt $ HS.Tuple []) (HS.BDecls [])
+        return $ HS.Alt dummy pat (HS.UnGuardedAlt $ HS.unit_con) (HS.BDecls [])
   cs <- mapM makeClause cs
   let rhs = case cs of
               [] -> fakeExp "()" -- There is no empty case statement in Haskell
@@ -477,7 +477,9 @@
 explicitForAll =
 -- GHC 7.0.1 cannot parse the following CPP conditional
 -- error: missing binary operator before token "("
-#if MIN_VERSION_haskell_src_exts(1,12,0)
+#if MIN_VERSION_haskell_src_exts(1,14,0)
+  HS.EnableExtension HS.ExplicitForAll
+#elif MIN_VERSION_haskell_src_exts(1,12,0)
   HS.ExplicitForAll
 #else
   HS.ExplicitForall
